{
    "name": "torch_starter (CUDA 12.4, uv, Py3.12)",
    "build": {
        "dockerfile": "Dockerfile",
        "context": ".."
    },
    "runArgs": [
        "--gpus",
        "all"
    ],
    "containerUser": "vscode",
    "workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",
    "containerEnv": {
        "HF_HOME": "/home/vscode/.cache/huggingface",
        "TRANSFORMERS_CACHE": "/home/vscode/.cache/huggingface",
        "TORCH_HOME": "/home/vscode/.cache/torch",
        "KAGGLE_CONFIG_DIR": "/home/vscode/.kaggle",
        "UV_LINK_MODE": "copy"
    },
    "mounts": [
        "source=${localEnv:USERPROFILE}/.cache/huggingface,target=/home/vscode/.cache/huggingface,type=bind,consistency=cached",
        "source=${localEnv:USERPROFILE}/.cache/torch,target=/home/vscode/.cache/torch,type=bind,consistency=cached",
        "source=${localEnv:USERPROFILE}/.kaggle,target=/home/vscode/.kaggle,type=bind,consistency=cached",
        "source=${localEnv:USERPROFILE}/data,target=${containerWorkspaceFolder}/data,type=bind,consistency=cached"
    ],
    "initializeCommand": "powershell -NoProfile -Command \"$u=$env:USERPROFILE; if (-not [string]::IsNullOrEmpty($u)) { New-Item -ItemType Directory -Force -Path $u+'\\\\.cache\\\\huggingface',$u+'\\\\.cache\\\\torch',$u+'\\\\.kaggle',$u+'\\\\data' | Out-Null }\"",
    "features": {},
    "postCreateCommand": "bash -lc \"set -euo pipefail; export UV_LINK_MODE=copy; export UV_VENV_CLEAR=1; if ! command -v uv >/dev/null 2>&1; then echo 'uv missing'; exit 1; fi; uv python install 3.12; uv venv --clear .venv -p 3.12; source .venv/bin/activate; uv sync --index-strategy unsafe-best-match --extra dev --extra notebook --extra torch-cu124; python -m ipykernel install --user --name torch_starter-3.12 --display-name \\\"Python 3.12 (torch_starter)\\\"; echo 'Post-create completed.'\"",
    "customizations": {
        "vscode": {
            "extensions": [
                "ms-python.python",
                "ms-python.vscode-pylance",
                "ms-toolsai.jupyter",
                "ms-azuretools.vscode-docker",
                "ms-vscode.makefile-tools",
                "redhat.vscode-yaml",
                "eamodio.gitlens",
                "EditorConfig.EditorConfig",
                "charliermarsh.ruff",
                "RooVeterinaryInc.roo-cline"
            ],
            "settings": {
                "python.defaultInterpreterPath": "${workspaceFolder}/.venv/bin/python",
                "python.terminal.activateEnvironment": true,
                "python.testing.pytestEnabled": true,
                "python.testing.unittestEnabled": false,
                "python.testing.pytestArgs": [
                    "tests"
                ],
                "ruff.enable": true,
                "ruff.organizeImports": true,
                "ruff.lint.args": [
                    "--fix"
                ],
                "mypy.args": [
                    "--config-file",
                    "${workspaceFolder}/pyproject.toml"
                ],
                "terminal.integrated.shellIntegration.enabled": true,
                "files.exclude": {
                    "**/.venv": true,
                    "**/__pycache__": true,
                    "**/.mypy_cache": true,
                    "**/.ruff_cache": true,
                    "**/.pytest_cache": true
                },
                "notebook.experimental.openGettingStarted": false
            }
        }
    },
    "remoteEnv": {
        "ROO_CONFIG_PATH": "${containerWorkspaceFolder}/.roo/roo.json",
        "MCP_SERVERS_CONFIG": "${containerWorkspaceFolder}/.mcp/servers.json"
    },
    "shutdownAction": "stopContainer",
    "hostRequirements": {
        "gpu": "optional"
    }
}