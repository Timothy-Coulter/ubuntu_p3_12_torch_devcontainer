{
    "name": "torch_starter-debug (CUDA 12.6.1, Fast Build)",
    "build": {
        "dockerfile": "../dockerfile.debug",
        "context": "..",
        "options": [
            "--build-arg",
            "BUILDKIT_INLINE_CACHE=1",
            "--build-arg",
            "PYTHON_VERSION=3.12",
            "--build-arg",
            "CUDA_VERSION=12.6.1"
        ]
    },
    "runArgs": [
        "--gpus",
        "all",
        "--runtime=nvidia",
        "--shm-size=2g",
        "--ulimit",
        "memlock=-1",
        "--cap-add",
        "SYS_PTRACE",
        "--security-opt",
        "seccomp=unconfined"
    ],
    "containerUser": "ubuntu",
    "workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",
    "containerEnv": {
        "TORCH_HOME": "/home/ubuntu/.cache/torch",
        "UV_LINK_MODE": "copy",
        "UV_COMPILE_BYTECODE": "1",
        "UV_CONCURRENT_DOWNLOADS": "10",
        "PYTHONDONTWRITEBYTECODE": "1",
        "PYTHONUNBUFFERED": "1",
        "CUDA_VERSION": "12.6.1",
        "CUDA_VISIBLE_DEVICES": "all",
        "NVIDIA_VISIBLE_DEVICES": "all",
        "NVIDIA_DRIVER_CAPABILITIES": "compute,utility",
        "NVIDIA_REQUIRE_CUDA": "cuda>=12.6.1",
        "FORCE_CUDA": "1",
        "SAFETY_API_KEY": "${localEnv:SAFETY_API_KEY}"
    },
    "mounts": [
        {
            "source": "torch-starter-debug-torch-cache",
            "target": "/home/ubuntu/.cache/torch",
            "type": "volume"
        },
        {
            "source": "torch-starter-debug-uv-cache",
            "target": "/home/ubuntu/.cache/uv",
            "type": "volume"
        }
    ],
    "initializeCommand": [
        "bash",
        "-c",
        "docker volume create torch-starter-debug-torch-cache 2>/dev/null || true; docker volume create torch-starter-debug-uv-cache 2>/dev/null || true"
    ],
    "features": {
        "ghcr.io/devcontainers/features/common-utils:2": {
            "configureZshAsDefaultShell": true,
            "upgradePackages": false
        }
    },
    "postCreateCommand": {
        "activate-env": "bash -c 'source .venv/bin/activate && python -c \"import sys; print(f\\\"üêç Python {sys.version}\\\")\" && python -c \"import torch; print(f\\\"üî• PyTorch {torch.__version__}\\\"); print(f\\\"üöÄ CUDA Available: {torch.cuda.is_available()}\\\"); print(f\\\"üì± CUDA Devices: {torch.cuda.device_count()}\\\") if torch.cuda.is_available() else print(\\\"‚ö†Ô∏è  CUDA Not Available\\\")\"'",
        "setup-git": "git config --global --add safe.directory /workspaces/${localWorkspaceFolderBasename}"
    },
    "customizations": {
        "vscode": {
            "extensions": [
                "ms-python.python",
                "ms-python.vscode-pylance",
                "charliermarsh.ruff",
                "ms-azuretools.vscode-docker",
                "RooVeterinaryInc.roo-cline"
            ],
            "settings": {
                "python.defaultInterpreterPath": "/workspaces/${localWorkspaceFolderBasename}/.venv/bin/python",
                "python.terminal.activateEnvironment": true,
                "python.analysis.typeCheckingMode": "basic",
                "python.analysis.autoImportCompletions": true,
                "python.testing.pytestEnabled": true,
                "python.testing.unittestEnabled": false,
                "python.testing.pytestArgs": [
                    "tests"
                ],
                "ruff.enable": true,
                "ruff.organizeImports": true,
                "ruff.serverEnabled": true,
                "ruff.lint.enable": true,
                "ruff.format.enable": true,
                "files.watcherExclude": {
                    "**/.venv/**": true,
                    "**/__pycache__/**": true,
                    "**/.cache/**": true
                },
                "search.exclude": {
                    "**/.venv": true,
                    "**/__pycache__": true,
                    "**/.cache": true
                },
                "terminal.integrated.defaultProfile.linux": "bash",
                "terminal.integrated.env.linux": {
                    "CUDA_VISIBLE_DEVICES": "all"
                },
                "extensions.autoUpdate": false,
                "telemetry.telemetryLevel": "off",
                "editor.formatOnSave": true,
                "editor.codeActionsOnSave": {
                    "source.organizeImports.ruff": "explicit",
                    "source.fixAll.ruff": "explicit"
                },
                "[python]": {
                    "editor.defaultFormatter": "charliermarsh.ruff",
                    "editor.codeActionsOnSave": {
                        "source.organizeImports": "explicit",
                        "source.fixAll": "explicit"
                    },
                    "editor.formatOnSave": true
                },
                "[dockerfile]": {
                    "editor.defaultFormatter": "ms-azuretools.vscode-docker"
                }
            }
        }
    },
    "remoteEnv": {
        "ROO_CONFIG_PATH": "/workspaces/${localWorkspaceFolderBasename}/.roo/roo.json",
        "MCP_SERVERS_CONFIG": "/workspaces/${localWorkspaceFolderBasename}/.mcp/servers.debug.json"
    },
    "shutdownAction": "stopContainer",
    "hostRequirements": {
        "gpu": "optional",
        "memory": "8gb",
        "cpus": 4
    },
    "capAdd": [
        "SYS_PTRACE"
    ],
    "securityOpt": [
        "seccomp=unconfined"
    ],
    "onCreateCommand": "echo 'üèóÔ∏è  Debug container created successfully'",
    "postStartCommand": "echo 'üöÄ Debug environment ready!'",
    "waitFor": "postCreateCommand"
}